[project]
name = "git-llm-commit"
dynamic = ["version"]
description = "Generate Conventional Commit messages from your staged changes using an LLM"
readme = "README.md"
license = "MIT"
authors = [
    { name = "syntax-sherlock", email = "syntax-sherlock@users.noreply.github.com" },
]
requires-python = ">=3.12"
dependencies = ["openai>=1.61.0", "python-dotenv>=1.0.1"]

[project.scripts]
git-llm-commit = "git_llm_commit:main"

[build-system]
requires = ["setuptools>=69.0.3", "setuptools_scm>=8.0", "wheel>=0.42.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-data = { "git_llm_commit" = ["py.typed"] }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_scheme = "no-guess-dev"

[dependency-groups]
dev = [
    "genbadge[coverage]>=1.1.1",
    "pytest>=8.3.4",
    "pytest-cov>=5.0.0",
    "ruff>=0.9.4",
]

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
